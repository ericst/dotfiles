
#+TITLE: ericst's Dotfiles
#+AUTHOR: Eric Seuret
#+EMAIL: eric@ericst.ch

* Introduction
Those are my dotfiles. They are supplied in the form of literate Emacs
org-mode. The different configuration are therefore easy to follow,
update and kept in a documented way.

One way of installing them is to open the desired file and run
~org-babel-tangle-file~ on them. However, a small script ~tangle.sh~
is provided for convenience. You can therefore use it as is:

#+begin_src bash :tangle no
  source tangle.sh <file-to-tangle>
#+end_src

The tangle script is provided as a script to be sourced because I
sometimes will execute on GNU guix installations. It is therefore
difficult to know in advance where bash will be located for the
shebang. Here is the script.

#+begin_src bash :tangle tangle.sh
  echo "Running org-babel-tangle-file on $1"
  \emacs --batch \
        --eval "(require 'org)" \
        --eval "(org-babel-tangle-file \"$1\")"
#+end_src

It is worth noting, that each org-mode file can be tangled into
several different files.

** Migration to stow
In the end, it is maybe easier to use stow. I am migrating the explanation
files to sub-folders that can be installed with stow. 

Once this is finished, the way to install it will be with:

#+begin_src bash :tangle no
  stow --no-folding  $package
#+end_src

Using the --no-folding option ensures that I only link the files, no
folders. That way the git repository stays clean.

* Tools
I keep one general file per tool. This file describe then the intended
configuration and can directly be tangled as the configuration if need
be.

You will find those files in the *tools* sub-directory.

- [[file:tools/Emacs.org][Emacs.org]] :: My Emacs configuration.
- [[file:tools/Bash.org][Bash.org]] :: My Bash configuration.
- [[file:tools/Readline.org][Readline.org]] :: My Readline configuration.
- [[file:tools/Git.org][Git.org]] :: My Git configuration.

* Machines
I also keep a configuration for each separate machine I use
(e.g. Laptop, Desktop or Work Computer). This file serves to describe
and set different machines' specificity (alternate directory paths,
idiosyncrasy due to the specific OS.)

You will find those files in the *machines* sub-directory.

* Generation of README                                             :noexport:
The following code when executed with ~C-c C-c~ will export this file
as a nice README for consumption on the terminal, or display on git
websites.

#+begin_src emacs-lisp :tangle no :results silent
  (setq-local org-export-show-temporary-export-buffer 'nil)
  (org-ascii-export-as-ascii 'nil 'nil 'nil 'nil '(:ascii-charset utf-8))
  (set-buffer "*Org ASCII Export*")
  (write-file "README")
  (kill-buffer "README")
#+end_src

